{"version":3,"sources":["Components/ProblemCardDisplay.tsx","StaticData/Tickets.ts","Pages/ProblemPage.tsx","Pages/HomePage.tsx","Components/TicketDisplay.tsx","Pages/TicketDisplayPage.tsx","Components/ProblemCardTesting.tsx","Components/TicketTesting.tsx","Pages/TicketTestPage.tsx","Components/ProblemCardChecking.tsx","Components/TicketChecking.tsx","Pages/TicketCheckPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProblemCardDisplay","props","state","solutionShowed","solutionShowedByDefault","problemData","this","Card","Header","num","to","id","Body","Title","className","dangerouslySetInnerHTML","__html","task_content","Collapse","in","solution_content","Button","variant","onClick","setState","Component","problems_list","is_detailed_answer","correct_answer","criteria","text","score","tickets_list","description_content","problems","filter","problem","includes","ProblemPage","match","params","Container","fluid","Row","Col","style","paddingRight","paddingLeft","find","p","toString","HomePage","map","ticket","as","href","process","TicketDisplay","ticketData","Badge","undefined","Text","TicketDisplayPage","ProblemCardTesting","answerInput","Subtitle","InputGroup","Prepend","FormControl","placeholder","aria-label","aria-describedby","onChange","e","target","value","Accordion","defaultActiveKey","Toggle","eventKey","Alert","TicketTesting","TicketTestPage","ProblemCardChecking","solutionRateRadioValue","Table","bordered","size","criterion","idx","marginLeft","type","checked","currentTarget","TicketChecking","TicketCheckPage","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c685037.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {ProblemType} from \"../Types/ProblemType\";\r\nimport {Button, Card, Collapse} from \"react-bootstrap\";\r\nimport '../media-req.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport interface ProblemCardDisplayProps {\r\n    problemData: ProblemType;\r\n    solutionShowedByDefault: boolean;\r\n}\r\n\r\nexport type ProblemCardDisplayState = {\r\n    solutionShowed: boolean;\r\n}\r\n\r\nexport class ProblemCardDisplay extends Component<ProblemCardDisplayProps, ProblemCardDisplayState> {\r\n    constructor(props: ProblemCardDisplayProps) {\r\n        super(props);\r\n        this.state = {\r\n            solutionShowed: props.solutionShowedByDefault,\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const {problemData} = this.props;\r\n        const {solutionShowed} = this.state;\r\n        return (\r\n            <Card>\r\n                <Card.Header><b>Задание {problemData.num} <Link to={'/problem/' + problemData.id}>№{problemData.id}</Link></b></Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>Задача:</Card.Title>\r\n                    <div className='problem-task-block' dangerouslySetInnerHTML={{__html: problemData.task_content}}/>\r\n                    <Collapse in={solutionShowed}>\r\n                        <div>\r\n                            <Card.Title>Решение:</Card.Title>\r\n                            <div className='problem-solution-block'\r\n                                 dangerouslySetInnerHTML={{__html: problemData.solution_content}}/>\r\n                        </div>\r\n                    </Collapse>\r\n                    <Button className='show-solution-btn'\r\n                            variant=\"primary\"\r\n                            onClick={() => this.setState({solutionShowed: !solutionShowed})}>\r\n                        {solutionShowed ? 'Скрыть решение' : 'Показать решение'}\r\n                    </Button>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}","import {TicketType} from \"../Types/TicketType\";\r\nimport {ProblemType} from \"../Types/ProblemType\";\r\n\r\n\r\n\r\nexport const problems_list: ProblemType[] = [\r\n    {\r\n        id: 81287,\r\n        num: '1',\r\n        is_detailed_answer: false,\r\n        task_content: `<p>Только 57% из 23&nbsp;000&nbsp;выпускников города правильно решили задачу B9. Сколько человек правильно решили задачу B9?</p>`,\r\n        solution_content: `<p class=\"left_margin\">Правильно решили задачу 23&nbsp;000&nbsp;<img src=\"https://ege.sdamgia.ru/formula/svg/57/571ca3d7c7a5d375a429ff5a90bc5099.svg\" class=\"tex\" style=\"vertical-align:-1.8pt\" alt=\" умножить на \">&nbsp;0,57&nbsp;=&nbsp;13&nbsp;110&nbsp;учеников.</p><p>&nbsp;</p><p><span style=\"letter-spacing:2px \">Ответ</span>: 13&nbsp;110.</p>`,\r\n        correct_answer: '13110',\r\n    },\r\n    {\r\n        id: 513435,\r\n        num: '2',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\">На рисунке жирными точками показано суточное количество осадков, выпадавших в Якутске с 18 по 29 октября 1986 года. По горизонтали указываются числа месяца, по вертикали — количество осадков, выпавших в соответствующий день, в миллиметрах. Для наглядности жирные точки на рисунке соединены линией. Определите по рисунку, сколько дней из данного периода выпадало от 0,1 до 0,6 миллиметров осадков.</p><p><img src=\"https://math-ege.sdamgia.ru/get_file?id=22605\" style=\"margin:10px auto;display:block\"></p>`,\r\n        solution_content: `<p class=\"left_margin\">Из графика видно, что 7 дня из данного периода (18, 19, 22, 24, 26, 27, 29 октября) выпадало от 0,1 до 0,6 миллиметров осадков (см. рисунок).</p><p>&nbsp;</p><p><span style=\"letter-spacing: 2px;\">Ответ: 7</span> </p>`,\r\n        correct_answer: '7'\r\n    },\r\n    {\r\n        id: 250977,\r\n        num: '3',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\"><img src=\"https://math-ege.sdamgia.ru/get_file?id=66265\" style=\"float:right;margin:10px;max-width:100%\"></p><p class=\"left_margin\">На клетчатой бумаге с размером клетки <img src=\"https://ege.sdamgia.ru/formula/svg/d8/d811f1438abb6b58b15b2e5b738c18bb.svg\" class=\"tex\" style=\"vertical-align:-11.0pt\" alt=\" дробь, числитель — 1, знаменатель — корень из { Пи }см \\\\times дробь, числитель — 1, знаменатель — корень из { Пи }см\"> изображён круг. Найдите площадь закрашенного сектора. Ответ дайте в квадратных сантиметрах.</p>`,\r\n        solution_content: `<p class=\"left_margin\"><img src=\"https://math-ege.sdamgia.ru/get_file?id=66266\" style=\"float:right;margin:10px;max-width:100%\"></p><p class=\"left_margin\">Найдем квадрат радиуса круга <img src=\"https://ege.sdamgia.ru/formula/svg/57/570251ed048388b006cb3722d7c67bd9.svg\" class=\"tex\" style=\"vertical-align:-11.2pt\" alt=\"R в степени 2 = левая круглая скобка дробь, числитель — 3, знаменатель — корень из { Пи } правая круглая скобка в степени 2 плюс левая круглая скобка дробь, числитель — 3, знаменатель — корень из { Пи } правая круглая скобка в степени 2 = дробь, числитель — 18, знаменатель — Пи \"> см<sup>2</sup>.</p><p>&nbsp;</p><p>&nbsp;</p><p class=\"left_margin\">Площадь фигуры равна трем восьмым площади этого круга. Поэтому</p><p class=\"left_margin\"></p><p align=\"center\"><img src=\"https://ege.sdamgia.ru/formula/svg/4f/4fde097749836bf484873e5360b2da5d.svg\" class=\"tex\" style=\"vertical-align:-8.5pt\" alt=\"S= дробь, числитель — 3, знаменатель — 8 Пи {{R} в степени 2 }= дробь, числитель — 3, знаменатель — 8 Пи умножить на дробь, числитель — 18, знаменатель — Пи =6,75 \"> см<sup>2</sup>.</p><p>&nbsp;</p><p><span style=\"letter-spacing:2px \">Ответ</span>: 6,75.</p>`,\r\n        correct_answer: '6,75'\r\n    },\r\n    {\r\n        id: 325909,\r\n        num: '4',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\">За круглый стол на 201 стул в случайном порядке рассаживаются 199 мальчиков и 2 девочки. Найдите вероятность того, что между девочками будет сидеть один мальчик.          </p>`,\r\n        solution_content: `<p class=\"left_margin\">Рассмотрим сидящую за столом девочку. За столом есть два места через одно от нее, на каждое из которых претендует 200 человек, из которых только одна девочка. Таким образом, вероятность, что между двумя девочками будет сидеть один мальчик равна <img src=\"https://ege.sdamgia.ru/formula/svg/03/039b60d5a8162a893b2df92602d6dd74.svg\" class=\"tex\" style=\"vertical-align:-8.5pt\" alt=\"2 умножить на дробь, числитель — 1, знаменатель — 200 = 0,01.\"></p><p>&nbsp;</p><p><span style=\"letter-spacing: 2px;\">Ответ:</span> 0,01</p>`,\r\n        correct_answer: '0,01'\r\n    },\r\n    {\r\n        id: 13685,\r\n        num: '5',\r\n        is_detailed_answer: false,\r\n        task_content: `<p>Найдите корень уравнения: <img src=\"https://ege.sdamgia.ru/formula/svg/fd/fd1cae1cd650f458df761a4af3f355a7.svg\" class=\"tex\" style=\"vertical-align:-11.2pt\" alt=\" левая круглая скобка дробь, числитель — 1, знаменатель — 5 правая круглая скобка в степени 4 минус x =5.\"></p>`,\r\n        solution_content: `<p class=\"left_margin\">Перейдем к одному основанию степени:</p><p align=\"center\"><img src=\"https://ege.sdamgia.ru/formula/svg/d3/d34b54cff3bf7b78ff56ba5c92c0ed48.svg\" class=\"tex\" style=\"vertical-align:-11.2pt\" alt=\"{{ левая круглая скобка дробь, числитель — 1, знаменатель — 5 правая круглая скобка } в степени 4 минус x }=5 равносильно {{ левая круглая скобка дробь, числитель — 1, знаменатель — 5 правая круглая скобка } в степени 4 минус x }={{ левая круглая скобка дробь, числитель — 1, знаменатель — 5 правая круглая скобка } в степени минус 1 } равносильно 4 минус x= минус 1 равносильно x=5.\"></p><p>&nbsp;</p><p><span style=\"letter-spacing:2px \">Ответ</span>: 5.</p>`,\r\n        correct_answer: '5'\r\n    },\r\n    {\r\n        id: 27750,\r\n        num: '6',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\"><img src=\"https://ege.sdamgia.ru/get_file?id=29777\" style=\"float:right;margin:10px\"> Больший угол равнобедренного треугольника равен 98°. Найдите меньший угол. Ответ дайте в градусах.</p>`,\r\n        solution_content: `<p class=\"left_margin\">Углы при основании равнобедренного равны и являются острыми углами. Тогда данный в условии угол является углом при вершине, откуда </p><p class=\"left_margin\"></p><p align=\"center\"><img src=\"https://ege.sdamgia.ru/formula/svg/ec/ecd2f1d99f5293aeb97c0d436a475a26.svg\" class=\"tex\" style=\"vertical-align:-8.4pt\" alt=\"\\\\angle A= дробь, числитель — 180{} в степени circ минус 98{} в степени circ , знаменатель — 2 =41{} в степени circ .\"></p> <p>&nbsp;</p><p><span style=\"letter-spacing:2px \">Ответ</span>: 41.</p>`,\r\n        correct_answer: '41'\r\n    },\r\n    {\r\n        id: 124215,\r\n        num: '7',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\">Решите уравнение <img src=\"https://ege.sdamgia.ru/formula/svg/9c/9c2ec6a3ae6e9da059506e952ee99b90.svg\" class=\"tex\" style=\"vertical-align:-11.4pt\" alt=\" дробь, числитель — ( косинус x минус 1)(2 синус x плюс корень из { 3}), знаменатель — корень из { \\\\ctg x }=0.\"></p>`,\r\n        solution_content: `<p class=\"left_margin\">Найдем закон изменения скорости: </p><p align=\"center\"><img src=\"https://ege.sdamgia.ru/formula/svg/e2/e2abdf906bee85e18006a7f55c2e39c6.svg\" class=\"tex\" style=\"vertical-align:-8.4pt\" alt=\"v(t)={x}'(t)= дробь, числитель — 1, знаменатель — 2 {{t} в степени 2 } минус 4t минус 4.\"></p> Чтобы найти, в какой момент времени <i>t</i> скорость была равна 38&nbsp;м/с, решим уравнение:<p class=\"left_margin\"></p><center><p><img src=\"https://ege.sdamgia.ru/formula/svg/68/68b76ee5e69c4fd996c28261e1128c04.svg\" class=\"tex\" style=\"vertical-align:-14.4pt\" alt=\" дробь, числитель — 1, знаменатель — 2 {{t} в степени 2 } минус 4t минус 4=38 равносильно {{t} в степени 2 } минус 8t минус 84=0 равносильно совокупность выражений  новая строка t=14;  новая строка t= минус 6 конец совокупности .\\\\underset{t больше 0}{\\\\mathop{ равносильно }}t=14\"> с.</p><p class=\"left_margin\"></p></center><p class=\"left_margin\">Следовательно, скорость точки была равна 38&nbsp;м/с на четырнадцатой секунде движения.</p><p>&nbsp;</p><p><span style=\"letter-spacing:2px \">Ответ</span>: 14.</p>`,\r\n        correct_answer: '14'\r\n    },\r\n    {\r\n        id: 502016,\r\n        num: '8',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\"><img src=\"https://ege.sdamgia.ru/get_file?id=67010\" style=\"float:right;margin:10px;max-width:100%\">В прямоугольном параллелепипеде <i>ABCDA<sub>1</sub>B<sub>1</sub>C<sub>1</sub>D<sub>1</sub></i> известны длины рёбер: <i>AB</i>&nbsp;=&nbsp;9, <i>AD</i>&nbsp;=&nbsp;12 , <i>AA</i><sub>1</sub>&nbsp;=&nbsp;18. Найдите синус угла между прямыми <i>A</i><sub>1</sub><i>D</i><sub>1</sub> и <i>AC</i>.</p>`,\r\n        solution_content: `<p class=\"left_margin\"><img src=\"https://ege.sdamgia.ru/get_file?id=67011\" style=\"float:right;margin:10px;max-width:100%\"></p><p class=\"left_margin\">Отрезок <i>A</i><sub>1</sub><i>D</i><sub>1</sub> = <i>A</i><i>D</i>. Тогда синус угла между прямыми <i>A</i><sub>1</sub><i>D</i><sub>1</sub> и <i>AC</i> равен синусу угла <img src=\"https://ege.sdamgia.ru/formula/svg/76/7646f2ac39cd2043f7511345c73faaff.svg\" class=\"tex\" style=\"vertical-align:-1.8pt\" alt=\"\\\\widehat{DAC}:\"></p><center><p><img src=\"https://ege.sdamgia.ru/formula/svg/db/dbaad4d50568d62620aa96569610104d.svg\" class=\"tex\" style=\"vertical-align:-10.9pt\" alt=\" дробь, числитель — CD, знаменатель — AC = дробь, числитель — AB, знаменатель — корень из { AB в степени 2 плюс AD в степени 2 }= дробь, числитель — 9, знаменатель — корень из { 81 плюс 144 }= дробь, числитель — 9, знаменатель — 15 =0,6.\"></p><p class=\"left_margin\"></p></center><p>&nbsp;</p><p><span style=\"letter-spacing:2px \">Ответ:</span>0,6.</p>`,\r\n        correct_answer: '0,6'\r\n\r\n    },\r\n    {\r\n        id: 86983,\r\n        num: '9',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\">Найдите значение выражения <img src=\"https://ege.sdamgia.ru/formula/svg/d0/d0248c8440d6ca1650d2256880677cf3.svg\" class=\"tex\" style=\"vertical-align:-3.6pt\" alt=\"(728 в степени 2 минус 26 в степени 2 ):754.\"></p>`,\r\n        solution_content: `<p class=\"left_margin\">Выполним преобразования: </p><p align=\"center\"><img src=\"https://ege.sdamgia.ru/formula/svg/e3/e36b743157b7191de546718948ac2fbf.svg\" class=\"tex\" style=\"vertical-align:-8.4pt\" alt=\"({{728} в степени 2 } минус {{26} в степени 2 }):754= дробь, числитель — (728 минус 26)(728 плюс 26), знаменатель — 754 = дробь, числитель — 702 умножить на 754, знаменатель — 754 =702.\"></p> <p>&nbsp;</p><p><span style=\"letter-spacing:2px \">Ответ</span>: 702.</p>`,\r\n        correct_answer: '702'\r\n\r\n    },\r\n    {\r\n        id: 518955,\r\n        num: '10',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\">Для определения эффективной температуры звёзд используют закон Стефана—Больцмана, согласно которому <img src=\"https://ege.sdamgia.ru/formula/svg/ea/ead0c62028b9ec8e9ff0b4959d0ea82d.svg\" class=\"tex\" style=\"vertical-align:-3.0pt\" alt=\"P = \\\\sigma ST в степени 4 ,\"> где <i>P</i>&nbsp;— мощность излучения звезды (в ваттах), <img src=\"https://ege.sdamgia.ru/formula/svg/6a/6ac9e4cb0d73d1f117ab049a6216c1b8.svg\" class=\"tex\" style=\"vertical-align:-9.5pt\" alt=\"\\\\sigma =5,7 умножить на {{10} в степени минус 8 } дробь, числитель — \\\\text{Вт}, знаменатель — {{\\\\text{м } в степени 2 } умножить на {{\\\\text{К}} в степени 4 }}\">&nbsp;— постоянная, <i>S</i>&nbsp;— площадь поверхности звезды (в квадратных метрах), а <i>T</i>&nbsp;— температура (в кельвинах). Известно, что площадь поверхности некоторой звезды равна <img src=\"https://ege.sdamgia.ru/formula/svg/7c/7c7f347b2d8622ecd4904b852b74c6da.svg\" class=\"tex\" style=\"vertical-align:-8.5pt\" alt=\" дробь, числитель — 1, знаменатель — 729 умножить на {{10} в степени 20 } {{\\\\text{м}} в степени 2 },\"> а мощность её излучения равна<img src=\"https://ege.sdamgia.ru/formula/svg/57/57ff30ce7ee89511a4d4487c2e83a1cb.svg\" class=\"tex\" style=\"vertical-align:-3.0pt\" alt=\"5,13 умножить на 10 в степени 25 \"> Вт. Найдите температуру этой звезды в кельвинах.</p>`,\r\n        solution_content: `<p class=\"left_margin\">Выразим температуру звезды из формулы Стефана-Больцмана и найдём её:</p><p class=\"left_margin\"></p><center><p><img src=\"https://ege.sdamgia.ru/formula/svg/c2/c29997678428cf03f43666725f3be0d9.svg\" class=\"tex\" style=\"vertical-align:-13.0pt\" alt=\" T= корень из [ 4]{ дробь, числитель — P, знаменатель — \\\\sigma S }= корень из [ 4]{ дробь, числитель — 5,13 умножить на 10 в степени 25 умножить на 729, знаменатель — 5,7 умножить на 10 в степени минус 8 умножить на 10 в степени { 20 }}}= корень из [ 4]{ 9 в степени 4 умножить на 10 в степени 12 }=9000.\"></p><p class=\"left_margin\"></p></center><p>&nbsp;</p><p><span style=\"letter-spacing: 2px;\">Ответ:</span> 9000.</p>`,\r\n        correct_answer: '9000'\r\n\r\n    },\r\n    {\r\n        id: 5773,\r\n        num: '11',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\">От пристани <i>А</i> к пристани <i>В</i>, расстояние между которыми равно 176 км,  отправился с постоянной скоростью первый теплоход, а через 5 часов после этого следом за ним со скоростью на 5 км/ч большей отправился второй.  Найдите скорость второго теплохода, если в пункт <i>В</i> он прибыл одновременно с первым. Ответ дайте в км/ч.</p>`,\r\n        solution_content: `<p class=\"left_margin\">Пусть <img src=\"https://ege.sdamgia.ru/formula/svg/7b/7b774effe4a349c6dd82ad4f4f21d34c.svg\" class=\"tex\" style=\"vertical-align:-1.8pt\" alt=\"u\"> км/ч — скорость второго теплохода, тогда скорость первого теплохода равна <img src=\"https://ege.sdamgia.ru/formula/svg/9d/9daa5fe551a07945a4f1b766ee94e41f.svg\" class=\"tex\" style=\"vertical-align:-1.8pt\" alt=\"u минус 5\"> км/ч. Первый теплоход находился в пути на 5 часов больше, чем второй, отсюда имеем:</p><p class=\"left_margin\"></p><p align=\"center\"><img src=\"https://ege.sdamgia.ru/formula/svg/6c/6cb01bc106970607cdba083924e02532.svg\" class=\"tex\" style=\"vertical-align:-9.3pt\" alt=\" дробь, числитель — 176, знаменатель — u минус 5 минус дробь, числитель — 176, знаменатель — u =5 равносильно дробь, числитель — 880, знаменатель — {{u в степени 2 } минус 5u}=5 равносильно 176={{u} в степени 2 } минус 5u равносильно {{u} в степени 2 } минус 5u минус 176=0 равносильно \"></p> <p align=\"center\"><img src=\"https://ege.sdamgia.ru/formula/svg/ba/ba80726e8fcd53f30f603dc805fe9514.svg\" class=\"tex\" style=\"vertical-align:-14.4pt\" alt=\" равносильно совокупность выражений  новая строка u=16;  новая строка u= минус 11 конец совокупности .\\\\underset{u больше 0}{\\\\mathop{ равносильно }}u=16.\"></p> <p>&nbsp;</p><p><span style=\"letter-spacing:2px \">Ответ</span>: 16.</p>`,\r\n        correct_answer: '16'\r\n\r\n    },\r\n    {\r\n        id: 3865,\r\n        num: '12',\r\n        is_detailed_answer: false,\r\n        task_content: `<p class=\"left_margin\">Найдите наибольшее значение функции <img src=\"https://ege.sdamgia.ru/formula/svg/ce/ce62b7b16f2b6dcda935a64a11d53e37.svg\" class=\"tex\" style=\"vertical-align:-3.6pt\" alt=\"y=\\\\ln {{(x плюс 5)} в степени 5 } минус 5x\"> на отрезке [−4,5; 0].</p>`,\r\n        solution_content: `<p class=\"left_margin\">Найдем производную заданной функции: </p><center><img src=\"https://ege.sdamgia.ru/formula/svg/4b/4b68b3694763ea3a9b0b3dda315fc61b.svg\" class=\"tex\" style=\"vertical-align:-9.2pt\" alt=\"{y}'= дробь, числитель — 5, знаменатель — x плюс 5 минус 5.\"></center><p>&nbsp;</p><p class=\"left_margin\">Найдем нули производной на заданном отрезке: </p><p class=\"left_margin\"></p><center><img src=\"https://ege.sdamgia.ru/formula/svg/ce/cec98ce3997bcf83bf05ac4dbaacc8d9.svg\" class=\"tex\" style=\"vertical-align:-17.8pt\" alt=\" система выражений  новая строка дробь, числитель — 5, знаменатель — x плюс 5 минус 5=0,  новая строка минус 4,5 меньше или равно x меньше или равно 0 конец системы . равносильно система выражений  новая строка дробь, числитель — 1, знаменатель — x плюс 5 =1,  новая строка минус 4,5 меньше или равно x меньше или равно 0 конец системы . равносильно система выражений  новая строка x= минус 4,  новая строка минус 4,5 меньше или равно x меньше или равно 0 конец системы . равносильно x= минус 4.\"></center><p>&nbsp;</p><p class=\"left_margin\">Определим знаки производной функции на заданном отрезке и изобразим на рисунке поведение функции: </p><center><p><img src=\"https://ege.sdamgia.ru/get_file?id=67874\" style=\"margin:10px auto;display:block;max-width:100%\"></p></center><p class=\"left_margin\">В точке <img src=\"https://ege.sdamgia.ru/formula/svg/fd/fdcc4ed253108d26776eab65588e8faf.svg\" class=\"tex\" style=\"vertical-align:-1.8pt\" alt=\"x= минус 4\"> заданная функция имеет максимум, являющийся ее наибольшим значением на заданном отрезке. Найдем это наибольшее значение: </p><center><img src=\"https://ege.sdamgia.ru/formula/svg/60/606160598a73ebc22ba0d99a43c6b7a4.svg\" class=\"tex\" style=\"vertical-align:-3.6pt\" alt=\"y( минус 4)=\\\\ln 1 плюс 5 умножить на 4=20.\"></center> <p>&nbsp;</p><p><span style=\"letter-spacing:2px \">Ответ</span>: 20.</p>`,\r\n        correct_answer: '20'\r\n\r\n    },\r\n    {\r\n        id: 511453,\r\n        num: '13',\r\n        is_detailed_answer: true,\r\n        task_content: `<p class=\"left_margin\">Решите уравнение <img src=\"https://ege.sdamgia.ru/formula/svg/9c/9c2ec6a3ae6e9da059506e952ee99b90.svg\" class=\"tex\" style=\"vertical-align:-11.4pt\" alt=\" дробь, числитель — ( косинус x минус 1)(2 синус x плюс корень из { 3}), знаменатель — корень из { \\\\ctg x }=0.\"></p>`,\r\n        solution_content: `<p class=\"left_margin\">Левая часть уравнения имеет смысл при <img src=\"https://ege.sdamgia.ru/formula/svg/9a/9a9f3e9de683b2607b173e992d99f6d7.svg\" class=\"tex\" style=\"vertical-align:-3.2pt\" alt=\"\\\\ctg x больше 0.\"> Приравняем числитель к нулю:</p><p class=\"left_margin\"></p><center><p><img src=\"https://ege.sdamgia.ru/formula/svg/b0/b084938b2ba7dd5d9a0f12371273edef.svg\" class=\"tex\" style=\"vertical-align:-30.9pt\" alt=\" ( косинус x минус 1)(2 синус x плюс корень из { 3})=0 равносильно совокупность выражений  новая строка косинус x=1, новая строка синус x= минус дробь, числитель — корень из { 3}, знаменатель — 2 конец совокупности равносильно совокупность выражений  новая строка x=2 Пи k, новая строка x= минус дробь, числитель — Пи , знаменатель — 3 плюс 2 Пи k, новая строка x= минус дробь, числитель — 2 Пи , знаменатель — 3 плюс 2 Пи k,k принадлежит Z . конец совокупности \"></p><p class=\"left_margin\"></p></center><p class=\"left_margin\">Учитывая условие <img src=\"https://ege.sdamgia.ru/formula/svg/b9/b9a489c0481799211d22ce1b6341744b.svg\" class=\"tex\" style=\"vertical-align:-3.0pt\" alt=\" синус x не равно 0,\"> получаем, что числа <img src=\"https://ege.sdamgia.ru/formula/svg/a3/a31eafe8c95ef889589ad9a113b038d6.svg\" class=\"tex\" style=\"vertical-align:-3.0pt\" alt=\"2 Пи k,k принадлежит Z \"> не являются решениями данного уравнения. Учитывая условие <img src=\"https://ege.sdamgia.ru/formula/svg/10/1012b779fe47566da1281f4ad0e686cf.svg\" class=\"tex\" style=\"vertical-align:-3.2pt\" alt=\"\\\\ctg x больше 0,\"> получаем, что числа <img src=\"https://ege.sdamgia.ru/formula/svg/0d/0d17e844ea2579e4be996af894eb5b5d.svg\" class=\"tex\" style=\"vertical-align:-8.4pt\" alt=\"x= минус дробь, числитель — Пи , знаменатель — 3 плюс 2 Пи k,k принадлежит Z \"> не являются решениями данного уравнения. Тогда <img src=\"https://ege.sdamgia.ru/formula/svg/f2/f23e3395f6cd2259e4e9acc37f342a59.svg\" class=\"tex\" style=\"vertical-align:-8.5pt\" alt=\"x= минус дробь, числитель — 2 Пи , знаменатель — 3 плюс 2 Пи k,k принадлежит Z .\"></p><p>&nbsp;</p><p><span style=\"letter-spacing: 2px;\">Ответ:</span>  <img src=\"https://ege.sdamgia.ru/formula/svg/72/72e94bf8fa5e426555762ad59566a555.svg\" class=\"tex\" style=\"vertical-align:-11.1pt\" alt=\"\\\\left\\\\{ минус дробь, числитель — 2 Пи , знаменатель — 3 плюс 2 Пи k:k принадлежит Z \\\\}.\"></p>`,\r\n        criteria: [\r\n            {\r\n                text: 'Обоснованно получены верные ответы в обоих пунктах.',\r\n                score: 2\r\n            },\r\n            {\r\n                text: 'Обоснованно получен верный ответ в пункте а), ИЛИ  получены неверные ответы из-за вычислительной ошибки, но при этом имеется верная последовательность всех шагов решения пункта а) и пункта б).',\r\n                score: 1\r\n            },\r\n            {\r\n                text: `Решение не соответствует ни одному из критериев, перечисленных выше.`,\r\n                score: 0\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 511239,\r\n        num: '15',\r\n        is_detailed_answer: true,\r\n        task_content: `<p class=\"left_margin\">Решите неравенство <img src=\"https://ege.sdamgia.ru/formula/svg/9c/9cdd5f9ecdb1871e75e0af42cdcfed60.svg\" class=\"tex\" style=\"vertical-align:-9.3pt\" alt=\" дробь, числитель — 2 корень из { x плюс 3}, знаменатель — x плюс 1 меньше или равно дробь, числитель — 3 корень из { x плюс 3}, знаменатель — x плюс 2 .\"></p>`,\r\n        solution_content: `<p class=\"left_margin\">Последовательно получаем:</p><p class=\"left_margin\"></p><center><p><img src=\"https://ege.sdamgia.ru/formula/svg/f0/f059e57cebd3f4b4c7fb5a7b1cfa9d8c.svg\" class=\"tex\" style=\"vertical-align:-11.2pt\" alt=\" дробь, числитель — 2 корень из { x плюс 3}, знаменатель — x плюс 1 меньше или равно дробь, числитель — 3 корень из { x плюс 3}, знаменатель — x плюс 2 равносильно дробь, числитель — 3 корень из { x плюс 3}, знаменатель — x плюс 2 минус дробь, числитель — 2 корень из { x плюс 3}, знаменатель — x плюс 1 больше или равно 0 равносильно корень из { x плюс 3} умножить на левая круглая скобка дробь, числитель — 3, знаменатель — x плюс 2 минус дробь, числитель — 2, знаменатель — x плюс 1 правая круглая скобка больше или равно 0 равносильно \"></p><p><img src=\"https://ege.sdamgia.ru/formula/svg/11/11d713b2b0850cec264b6100ddec0b06.svg\" class=\"tex\" style=\"vertical-align:-11.1pt\" alt=\" равносильно корень из { x плюс 3} умножить на дробь, числитель — 3x плюс 3 минус 2x минус 4, знаменатель — (x плюс 1)(x плюс 2) больше или равно 0 равносильно дробь, числитель — корень из { x плюс 3} умножить на (x минус 1), знаменатель — (x плюс 1)(x плюс 2) больше или равно 0.\"></p><p class=\"left_margin\"></p></center><p class=\"left_margin\">И решим это неравенство методом интервалов, учитывая, что <img src=\"https://ege.sdamgia.ru/formula/svg/8a/8a90738b5dff68c0fdb704cf96c43743.svg\" class=\"tex\" style=\"vertical-align:-2.3pt\" alt=\"x больше или равно минус 3.\"></p><p><img src=\"https://ege.sdamgia.ru/get_file?id=42014\" style=\"margin:10px auto;display:block;max-width:100%\"></p><p><span style=\"letter-spacing: 2px;\">Ответ:</span> <img src=\"https://ege.sdamgia.ru/formula/svg/ec/ec635117b24a6dfc74ca766d61be8087.svg\" class=\"tex\" style=\"vertical-align:-3.6pt\" alt=\"\\\\left\\\\{ минус 3 \\\\}\\\\cup левая круглая скобка минус 2; минус 1 правая круглая скобка \\\\cup левая квадратная скобка 1; плюс принадлежит fty правая круглая скобка .\"></p>`,\r\n        criteria: [\r\n            {\r\n                text: 'Обоснованно получен верный ответ.',\r\n                score: 3\r\n            },\r\n            {\r\n                text: 'Обоснованно получены верные ответы в обоих неравенствах исходной системы.',\r\n                score: 2\r\n            },\r\n            {\r\n                text: 'Обоснованно получен верный ответ в одном неравенстве исходной системы. ИЛИ  получен неверный ответ из-за вычислительной ошибки, но при этом имеется верная последовательность всех шагов решения системы неравенств.',\r\n                score: 1\r\n            },\r\n            {\r\n                text: `Решение не соответствует ни одному из критериев, перечисленных выше.`,\r\n                score: 0\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 552117,\r\n        num: '17',\r\n        is_detailed_answer: true,\r\n        task_content: `<div align=\"justify\" id=\"body393801\" class=\"pbody\"><p class=\"left_margin\">В июле 2019 года планируется взять кредит в банке в размере <i>S</i> тысяч рублей (<i>S</i>&nbsp;— натуральное число) сроком на 3&nbsp;года. Условия его возврата таковы:</p><p class=\"left_margin\">— каждый январь долг увеличивается на 17,5% по сравнению с концом предыдущего года;</p><p class=\"left_margin\">— с февраля по июнь каждого года необходимо выплатить одним платежом часть долга;</p><p class=\"left_margin\">— в июле каждого года долг должен составлять часть кредита в соответствии с таблицей:</p><p>&nbsp;</p><p><table style=\"margin:auto\"><tbody><tr><th style=\"text-align:center\">Месяц и год</th><th style=\"text-align:center\">Июль 2019</th><th style=\"text-align:center\">Июль 2020</th><th style=\"text-align:center\">Июль 2021</th><th style=\"text-align:center\">Июль 2022</th></tr><tr><td style=\"text-align:center\">Долг (в тыс. рублей)</td><td style=\"text-align:center\"><i>S</i></td><td style=\"text-align:center\">0,9<i>S</i></td><td style=\"text-align:center\">0,4<i>S</i></td><td style=\"text-align:center\">0</td></tr></tbody></table></p><p>&nbsp;</p><p class=\"left_margin\">Найдите наименьшее значение <i>S</i>, при котором каждая из выплат будет составлять целое число тысяч рублей.</p></div>`,\r\n        solution_content: `<p class=\"left_margin\">Первая выплата будет составлять <img src=\"https://ege.sdamgia.ru/formula/svg/b1/b12f436289d59026c907e662b31d4400.svg\" class=\"tex\" style=\"vertical-align:-8.4pt\" alt=\"1,175S минус 0,9S =0,275S= дробь, числитель — 275, знаменатель — 1000 S= дробь, числитель — 11, знаменатель — 40 S\"> тыс. руб.</p><p class=\"left_margin\">Вторая выплата: <img src=\"https://ege.sdamgia.ru/formula/svg/51/5182eff42bf8a54ae17e1ba2245844f7.svg\" class=\"tex\" style=\"vertical-align:-8.4pt\" alt=\"1,175 умножить на 0,9S минус 0,4S=0,6575S= дробь, числитель — 6575, знаменатель — 10000 S= дробь, числитель — 263, знаменатель — 400 S\"> тыс. руб.</p><p class=\"left_margin\">Третья выплата: <img src=\"https://ege.sdamgia.ru/formula/svg/1c/1cb95a944c967f467164b8e239d1da2e.svg\" class=\"tex\" style=\"vertical-align:-8.5pt\" alt=\"1,175 умножить на 0,4S минус 0=0,47S= дробь, числитель — 47, знаменатель — 100 S\"> тыс. руб.</p><p class=\"left_margin\">Наименьшее значение <i>S</i>, при котором каждая из выплат будет составлять целое число тысяч рублей, является наименьшим общим кратным чисел 40, 400 и 100, то есть числом 400.</p><p>&nbsp;</p><p><span style=\"letter-spacing: 2px;\">Ответ:</span> 400.</p>`,\r\n        criteria: [\r\n            {\r\n                text: 'Обоснованно получен верный ответ.',\r\n                score: 3\r\n            },\r\n            {\r\n                text: 'Верно построена математическая модель, решение сведено к исследованию этой модели и получен результат: — неверный ответ из-за вычислительной ошибки;  — верный ответ, но решение недостаточно обосновано.',\r\n                score: 2\r\n            },\r\n            {\r\n                text: 'Верно построена математическая модель, решение сведено к исследованию этой модели, при этом решение может быть не завершено.',\r\n                score: 1\r\n            },\r\n            {\r\n                text: `Решение не соответствует ни одному из критериев, перечисленных выше.`,\r\n                score: 0\r\n            }\r\n        ]\r\n    },\r\n]\r\n\r\nexport const tickets_list: TicketType[] = [\r\n    {\r\n        id: 37671734,\r\n        num: '1',\r\n        description_content: `<p align=\"justify\">При выполнении заданий с кратким ответом впишите в поле для ответа цифру, которая соответствует номеру правильного ответа, или число, слово, последовательность букв (слов) или цифр. Ответ следует записывать без пробелов и каких-либо дополнительных символов. Дробную часть отделяйте от целой десятичной запятой. Единицы измерений писать не нужно.</p><p align=\"justify\">Если вариант задан учителем, вы можете вписать или загрузить в систему ответы к заданиям с развернутым ответом. Учитель увидит результаты выполнения заданий с кратким ответом и сможет оценить загруженные ответы к заданиям с развернутым ответом. Выставленные учителем баллы отобразятся в вашей статистике.</p>`,\r\n        problems: problems_list.filter((problem) => [81287, 513435, 250977, 325909, 13685, 27750, 124215, 502016, 86983, 518955, 5773, 3865, 511453, 511239, 552117].includes(problem.id))\r\n    },\r\n];","import React, {Component} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport '../media-req.css'\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport {ProblemCardDisplay} from \"../Components/ProblemCardDisplay\";\r\nimport {problems_list} from \"../StaticData/Tickets\";\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\nexport interface ProblemPageProps extends RouteComponentProps<MatchParams> {\r\n}\r\n\r\nexport type ProblemPageState = {}\r\n\r\nexport class ProblemPage extends Component<ProblemPageProps, ProblemPageState> {\r\n    constructor(props: ProblemPageProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params\r\n        return (\r\n            <Container fluid='sm'>\r\n                <Row>\r\n                    <Col style={{paddingRight: 0, paddingLeft: 0}}>\r\n                        <ProblemCardDisplay problemData={problems_list.find((p) => p.id.toString() === id)!!}\r\n                                            solutionShowedByDefault={true}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Badge, Button, Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport '../media-req.css'\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport {ProblemCardDisplay} from \"../Components/ProblemCardDisplay\";\r\nimport {problems_list, tickets_list} from \"../StaticData/Tickets\";\r\nimport TicketTesting from \"../Components/TicketTesting\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MatchParams {\r\n}\r\n\r\nexport interface HomePageProps extends RouteComponentProps<MatchParams>{\r\n}\r\n\r\nexport type HomePageState = {}\r\n\r\nexport class HomePage extends Component<HomePageProps, HomePageState> {\r\n    constructor(props: HomePageProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid='sm'>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>Список билетов</Card.Header>\r\n                            <Card.Body>\r\n                                <Container>\r\n                                    {tickets_list.map((ticket) => (\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Card>\r\n                                                    <Card.Header as='h5'>\r\n                                                        Билет №{ticket.id}\r\n                                                    </Card.Header>\r\n                                                    <Card.Body>\r\n                                                        <Container fluid>\r\n                                                            <Row>\r\n                                                                <Col>\r\n                                                                    <Button href={process.env.PUBLIC_URL + '/#/ticket/' + ticket.id} variant='info'>Просмотр билета</Button>\r\n                                                                </Col>\r\n                                                                <Col>\r\n\r\n                                                                    <Button href={process.env.PUBLIC_URL + 'ege-test-app/#/testing/' + ticket.id} variant='primary'>#dev Тестирование</Button>\r\n                                                                </Col>\r\n                                                                <Col>\r\n\r\n                                                                    <Button href={process.env.PUBLIC_URL + 'ege-test-app/#/checking/' + ticket.id} variant='success'>#def проверка</Button>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Container>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    ))}\r\n                                </Container>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Badge, Button, Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport {ProblemCardTesting} from \"./ProblemCardTesting\";\r\nimport {TicketType} from \"../Types/TicketType\";\r\nimport '../media-req.css'\r\nimport {ProblemCardDisplay} from \"./ProblemCardDisplay\";\r\n\r\nexport interface TicketDisplayProps {\r\n    ticketData: TicketType;\r\n}\r\n\r\nexport type TicketDisplayState = {}\r\n\r\nclass TicketDisplay extends Component<TicketDisplayProps, TicketDisplayState> {\r\n    constructor(props: TicketDisplayProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n    }\r\n\r\n    render() {\r\n        const {ticketData} = this.props;\r\n        return (\r\n            <Card>\r\n                <Card.Header as='h5'>\r\n                    Билет №{ticketData.id}\r\n                    <br/>\r\n                    <Badge variant='info'>Просмотр билета</Badge>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {ticketData.description_content !== undefined &&\r\n                    <Card.Text>\r\n                        <div dangerouslySetInnerHTML={{__html: ticketData.description_content}}/>\r\n                    </Card.Text>}\r\n                    <Container style={{paddingRight: 0, paddingLeft: 0}}>\r\n                        {ticketData.problems.map((problem) => (\r\n                            <Row>\r\n                                <Col>\r\n                                    <ProblemCardDisplay problemData={problem} solutionShowedByDefault={false}/>\r\n                                </Col>\r\n                            </Row>\r\n                        ))}\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketDisplay;","import React, {Component} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {tickets_list} from \"../StaticData/Tickets\";\r\nimport TicketDisplay from \"../Components/TicketDisplay\";\r\nimport {RouteComponentProps} from \"react-router\";\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\nexport interface TicketDisplayPageProps extends RouteComponentProps<MatchParams> {\r\n}\r\n\r\nexport type TicketDisplayPageState = {}\r\n\r\nclass TicketDisplayPage extends Component<TicketDisplayPageProps, TicketDisplayPageState> {\r\n    constructor(props: TicketDisplayPageProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params\r\n        return (\r\n            <Container fluid='sm'>\r\n                <Row>\r\n                    <Col style={{paddingRight: 0, paddingLeft: 0}}>\r\n                        <TicketDisplay ticketData={tickets_list.find((p) => p.id.toString() === id)!!}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketDisplayPage;","import React, {Component} from 'react';\r\nimport {ProblemType} from \"../Types/ProblemType\";\r\nimport {Accordion, Alert, Button, Card, FormControl, InputGroup} from \"react-bootstrap\";\r\nimport '../media-req.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface ProblemCardTestingProps {\r\n    problemData: ProblemType;\r\n}\r\n\r\nexport type ProblemCardTestingState = {\r\n    answerInput: string;\r\n}\r\n\r\nexport class ProblemCardTesting extends Component<ProblemCardTestingProps, ProblemCardTestingState> {\r\n    constructor(props: ProblemCardTestingProps) {\r\n        super(props);\r\n        this.state = {\r\n            answerInput: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const {problemData} = this.props;\r\n        const {} = this.state;\r\n        return (\r\n            <Card>\r\n                <Card.Header><b>Задание {problemData.num} <Link to={'/problem/' + problemData.id}>№{problemData.id}</Link></b></Card.Header>\r\n                <Card.Body>\r\n                    <Card.Subtitle>Задача:</Card.Subtitle>\r\n                    <div className='problem-task-block' dangerouslySetInnerHTML={{__html: problemData.task_content}}/>\r\n                    {!problemData.is_detailed_answer &&\r\n                    <InputGroup className=\"mb-0\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"answer-addon\">Ответ</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            placeholder=\"Введите ответ на задачу\"\r\n                            aria-label=\"answer\"\r\n                            aria-describedby=\"answer-addon\"\r\n                            onChange={(e) => this.setState({answerInput: e.target.value})}\r\n                        />\r\n                    </InputGroup>}\r\n                    {problemData.is_detailed_answer &&\r\n                    <Accordion defaultActiveKey=\"1\">\r\n                                <Accordion.Toggle as={Button} variant='info' eventKey=\"0\">\r\n                                    Информация\r\n                                </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Alert variant='info'>Решения заданий с развернутым ответом не проверяются автоматически. <br/>Решите это задание в тетради. После завершения теста вы увидите разбор для самопроверки.</Alert>\r\n                            </Accordion.Collapse>\r\n                    </Accordion>\r\n\r\n                    }\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Badge, Button, Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport {ProblemCardTesting} from \"./ProblemCardTesting\";\r\nimport {TicketType} from \"../Types/TicketType\";\r\nimport '../media-req.css'\r\n\r\nexport interface TicketTestingProps {\r\n    ticketData: TicketType;\r\n}\r\n\r\nexport type TicketTestingState = {}\r\n\r\nclass TicketTesting extends Component<TicketTestingProps, TicketTestingState> {\r\n    constructor(props: TicketTestingProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n    }\r\n\r\n    render() {\r\n        const {ticketData} = this.props;\r\n        return (\r\n            <Card>\r\n                <Card.Header as='h5'>\r\n                    Билет №{ticketData.id}\r\n                    <br/>\r\n                    <Badge variant='info'>Тестирование</Badge>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {ticketData.description_content !== undefined &&\r\n                    <Card.Text>\r\n                        <div dangerouslySetInnerHTML={{__html: ticketData.description_content}}/>\r\n                    </Card.Text>}\r\n                    <Container style={{paddingRight: 0, paddingLeft: 0}}>\r\n                        {ticketData.problems.map((problem) => (\r\n                            <Row>\r\n                                <Col>\r\n                                    <ProblemCardTesting problemData={problem}/>\r\n                                </Col>\r\n                            </Row>\r\n                        ))}\r\n                        <Row className='row-next-bottom'>\r\n                            <Col>\r\n                                <Button className='btn-next-bottom'>\r\n                                    Завершить тестирование и свериться с ответами\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketTesting;","import React, {Component} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport TicketTesting from \"../Components/TicketTesting\";\r\nimport {tickets_list} from \"../StaticData/Tickets\";\r\nimport {TicketChecking} from \"../Components/TicketChecking\";\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport TicketDisplay from \"../Components/TicketDisplay\";\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\nexport interface TicketTestPageProps extends RouteComponentProps<MatchParams> {\r\n}\r\n\r\nexport type TicketTestPageState = {}\r\n\r\nclass TicketTestPage extends Component<TicketTestPageProps, TicketTestPageState> {\r\n    constructor(props: TicketTestPageProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params\r\n        return (\r\n            <Container fluid='sm'>\r\n                <Row>\r\n                    <Col style={{paddingRight: 0, paddingLeft: 0}}>\r\n                        <TicketTesting ticketData={tickets_list.find((p) => p.id.toString() === id)!!}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketTestPage;","import React, {Component} from 'react';\r\nimport {ProblemType} from \"../Types/ProblemType\";\r\nimport {Card, Collapse, Table} from \"react-bootstrap\";\r\nimport '../media-req.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport interface ProblemCardCheckingProps {\r\n    problemData: ProblemType;\r\n    solutionShowedByDefault: boolean;\r\n}\r\n\r\nexport type ProblemCardCheckingState = {\r\n    solutionShowed: boolean;\r\n    solutionRateRadioValue: string;\r\n}\r\n\r\n\r\nexport class ProblemCardChecking extends Component<ProblemCardCheckingProps, ProblemCardCheckingState> {\r\n    constructor(props: ProblemCardCheckingProps) {\r\n        super(props);\r\n        this.state = {\r\n            solutionShowed: true,\r\n            solutionRateRadioValue: '0'\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const {problemData} = this.props;\r\n        const {solutionShowed, solutionRateRadioValue} = this.state;\r\n        return (\r\n            <Card>\r\n                <Card.Header><b>Задание {problemData.num} <Link to={'/problem/' + problemData.id}>№{problemData.id}</Link></b></Card.Header>\r\n                <Card.Body>\r\n                    <Card.Subtitle>Задача:</Card.Subtitle>\r\n                    <div className='problem-task-block' dangerouslySetInnerHTML={{__html: problemData.task_content}}/>\r\n                    <Collapse in={solutionShowed}>\r\n                        <div>\r\n                            <Card.Subtitle>Решение:</Card.Subtitle>\r\n                            <div className='problem-solution-block'\r\n                                 dangerouslySetInnerHTML={{__html: problemData.solution_content}}/>\r\n                        </div>\r\n                    </Collapse>\r\n                    <div>\r\n                        <Table bordered size=\"sm\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Баллы</th>\r\n                                <th>Критерии оценивания выполнения задания</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {problemData.criteria!!.map((criterion, idx) => (\r\n                                <tr>\r\n                                    <td>\r\n                                        <label style={{marginLeft: '0.5em'}}>\r\n                                            <input type=\"radio\"\r\n                                                   value={criterion.score}\r\n                                                   checked={solutionRateRadioValue === criterion.score.toString()}\r\n                                                   onChange={(e) => this.setState({solutionRateRadioValue: e.currentTarget.value})}/>\r\n                                            <span style={{marginLeft: '0.3em'}}><b>{criterion.score}</b></span>\r\n                                        </label>\r\n                                    </td>\r\n                                    <td>{criterion.text}</td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    {/*<ButtonGroup toggle>\r\n                        {problemData.criteria!!.reverse().map((criterion, idx) => (\r\n                            <ToggleButton\r\n                                key={idx}\r\n                                type=\"radio\"\r\n                                variant=\"outline-info\"\r\n                                name=\"radio\"\r\n                                value={criterion.score}\r\n                                checked={solutionRateRadioValue === criterion.score.toString()}\r\n                                onChange={(e) => this.setState({solutionRateRadioValue: e.currentTarget.value})}>\r\n                                {criterion.score}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup>*/}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Badge, Button, Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport {TicketType} from \"../Types/TicketType\";\r\nimport '../media-req.css'\r\nimport {ProblemCardChecking} from \"./ProblemCardChecking\";\r\n\r\nexport interface TicketCheckingProps {\r\n    ticketData: TicketType;\r\n}\r\n\r\nexport type TicketCheckingState = {}\r\n\r\nexport class TicketChecking extends Component<TicketCheckingProps, TicketCheckingState> {\r\n    constructor(props: TicketCheckingProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n    }\r\n\r\n    render() {\r\n        const {ticketData} = this.props;\r\n        return (\r\n            <Card>\r\n                <Card.Header as='h5'>Билет №{ticketData.id}\r\n                    <br/>\r\n                    <Badge variant='info'>Проверка части с развернутым ответом</Badge>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        Ниже вы можете ознакомиться с решениями заданий части с развернутым ответом и оценить их\r\n                        выполнение самостоятельно.\r\n                        По окончании проверки нажмите кнопку «Подвести итоги», вы будете перенаправлены на страницу с\r\n                        решениями остальных заданий и результатами.\r\n                    </Card.Text>\r\n                    <Container style={{paddingRight: 0, paddingLeft: 0}}>\r\n                        {ticketData.problems.filter((problem) => problem.is_detailed_answer).map((problem) => (\r\n                            <Row>\r\n                                <Col>\r\n                                    <ProblemCardChecking problemData={problem} solutionShowedByDefault={true}/>\r\n                                </Col>\r\n                            </Row>\r\n                        ))}\r\n                        <Row className='row-next-bottom'>\r\n                            <Col>\r\n                                <Button className='btn-next-bottom'>\r\n                                    Подвести итоги\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport TicketTesting from \"../Components/TicketTesting\";\r\nimport {tickets_list} from \"../StaticData/Tickets\";\r\nimport {TicketChecking} from \"../Components/TicketChecking\";\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport TicketDisplay from \"../Components/TicketDisplay\";\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\nexport interface TicketCheckPageProps extends RouteComponentProps<MatchParams> {\r\n}\r\n\r\nexport type TicketCheckPageState = {}\r\n\r\nclass TicketCheckPage extends Component<TicketCheckPageProps, TicketCheckPageState> {\r\n    constructor(props: TicketCheckPageProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params\r\n        return (\r\n            <Container fluid='sm'>\r\n                <Row>\r\n                    <Col style={{paddingRight: 0, paddingLeft: 0}}>\r\n                        <TicketChecking ticketData={tickets_list.find((p) => p.id.toString() === id)!!}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketCheckPage;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './media-req.css'\nimport {BrowserRouter, HashRouter, Route, Switch} from \"react-router-dom\";\nimport {ProblemPage} from \"./Pages/ProblemPage\";\nimport {HomePage} from \"./Pages/HomePage\";\nimport TicketDisplayPage from \"./Pages/TicketDisplayPage\";\nimport TicketTestPage from \"./Pages/TicketTestPage\";\nimport TicketCheckPage from \"./Pages/TicketCheckPage\";\n\nfunction App() {\n    return (\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            {/*{tickets_list.map((ticket) => (*/}\n            {/*    <Link to={'/testticket/' + ticket.id}>{ticket.num}</Link>*/}\n            {/*))}*/}\n            <Switch>\n                <Route exact path='/' component={HomePage}/>\n                <Route path='/problem/:id' component={ProblemPage}/>\n                <Route path='/ticket/:id' component={TicketDisplayPage}/>\n                <Route path='/testing/:id' component={TicketTestPage}/>\n                <Route path='/checking/:id' component={TicketCheckPage}/>\n                <Route path=\"*\" component={HomePage}/>\n            </Switch>\n        </HashRouter>\n    );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}